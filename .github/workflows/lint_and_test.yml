name: Continuous Integration for Pixels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt
      - name: Lint with Flake8
        run: flake8 .
      - name: Lint with isort
        run: isort --check --diff .
      - name: Lint with black
        run: black --check --diff .

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install GDAL
        run: sudo apt-get install -y gdal-bin
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt
          pip install -r requirements.txt
          pip install -r batch/docker/requirements.txt
          pip install -r batch/docker/tensorflow_requirements.txt
      - name: Run tests
        run: pytest

  deploy:
    name: Deploy
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: contains('refs/heads/main', github.ref)
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install awscli
        run: pip install awscli
      - name: Deploy to batch
        run: ./build_batch.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Sentry Release
        uses: tesselo/release-action@main
        with:
          sentry_project: pixels
          sentry_environment: 'production'
          sentry_release: ${{ github.sha }}
          code_dir: 'pixels'
        env:
          SENTRY_ORG: 'tesselo'
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

  check_dependencies_change:
    name: Check dependencies change
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.2
      - name: Search for dependencies in batch
        id: batch-dependencies
        run: |
          if "batch/docker/requirements.txt" in steps.changed-files.outputs.all_changed_files; do
            echo "Batch rebuild needed"
          done
          echo "::set-output name=changes::yes"
      - name: Search for dependencies in pixels
        id: pixel-dependencies
        run: |
          if "requirements.txt" in steps.changed-files.outputs.all_changed_files; do
            echo "Pixels rebuild needed"
          done
          echo "::set-output name=changes::yes"

  notify_team_batch_changes:
    name: Notify the team
    runs-on: ubuntu-latest
    needs: [check_dependencies_change]
    if:  contains('yes', github.steps.batch-dependencies.changes)
    steps:
      - name: Post to the tech channel
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: 'C01SF1KHC77'
          slack-message: "Pull Request with rebuild required for Pixels Batch. Rebuild the ECS image."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  notify_team_pixels_changes:
    name: Notify the team
    runs-on: ubuntu-latest
    needs: [check_dependencies_change]
    if:  contains('yes', github.steps.pixels-dependencies.changes)
    steps:
      - name: Post to the tech channel
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: 'C01SF1KHC77'
          slack-message: "Pull Request with rebuild required for Pixels. Update your main and do make install."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}